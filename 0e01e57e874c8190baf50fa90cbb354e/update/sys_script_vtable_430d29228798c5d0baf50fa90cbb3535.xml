<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_vtable">
    <sys_script_vtable action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <cache_isolation_level>USER</cache_isolation_level>
        <cache_strategy>CACHE_BY_QUERY</cache_strategy>
        <cache_ttl>0</cache_ttl>
        <name>DG Account</name>
        <script><![CDATA[(function executeQuery(v_table, v_query) {

	var accountIDs
	
    if (v_query.isGet()) {
        accountIDs = v_query.getSysId()
    }

    if (!v_query.isGet()) {
        gr = new GlideRecord('x_snc_hconnector_account')
        gr.query()
        while (gr.next()) {
            if (gr.getValue('account_id') == undefined) {
				accountIDs = gr.account_id //first step
			} else {
				accountIDs = accountIDs + "," + gr.account_id
			}
			gs.addInfoMessage(gr.account_id)
        }
    }

    gs.addInfoMessage(accountIDs)

    var endpoint = "https://api-testnet.dragonglass.me/hedera/api/accounts?accountID=" + accountIDs

    var sm = new sn_ws.RESTMessageV2()
    sm.setEndpoint(endpoint)
    sm.setRequestHeader('X-API-KEY', '8dff0aff-de40-38ac-b980-b162adeb49e1')
    sm.setHttpMethod('get')
    resp = sm.execute()
    var body = JSON.parse(resp.getBody())
    gs.addInfoMessage(resp.getBody())

    for (var i = 0; i < body.data.length; i++) {

        createdOn = new GlideDateTime(body.data[i].createdOn.substring(0, 10) + " " + body.data[i].createdOn.substring(11, 19))
        createdOn.add(body.data[i].createdOn.substring(20, 23))

        expiry = new GlideDateTime(body.data[i].expiry.substring(0, 10) + " " + body.data[i].expiry.substring(11, 19))
        expiry.add(body.data[i].expiry.substring(20, 23))

        var row = {
            sys_id: body.data[i].accountID,
            account_id: body.data[i].accountID,
            memo: body.data[i].memo,
            public_key: body.data[i].keys.ed25519,
            active: body.data[i].active,
            payer_id: body.data[i].payerID,
            tinybar: body.data[i].balance.toString(),
            expiry: body.data[i].expiry,
            created_on: createdOn,
            auto_renew: new GlideDuration(body.data[i].autoRenew)
        }

        v_table.addRow(row)
    }

})(v_table, v_query);]]></script>
        <sys_class_name>sys_script_vtable</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-11 08:20:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>430d29228798c5d0baf50fa90cbb3535</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>DG Account</sys_name>
        <sys_package display_value="hconnector" source="x_snc_hconnector">0e01e57e874c8190baf50fa90cbb354e</sys_package>
        <sys_policy/>
        <sys_scope display_value="hconnector">0e01e57e874c8190baf50fa90cbb354e</sys_scope>
        <sys_update_name>sys_script_vtable_430d29228798c5d0baf50fa90cbb3535</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-11 08:21:01</sys_updated_on>
        <table>x_snc_hconnector_st_dg_account</table>
    </sys_script_vtable>
</record_update>
